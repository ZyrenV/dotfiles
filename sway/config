### Inner gaps ###
gaps inner 4

### Default Font ###
font pango: SourceCodePro Large 4

### Waybar ###
    bar {
        # swaybar_command waybar
    }

### Output devices (Display) ###
    set $OUTPUT         *
    set $OUTPUT_DP      eDP-1
    set $OUTPUT_HDMI    HDMI-A-1

    set $OUTPUT $OUTPUT_DP

    # workspace $OUTPUT output $OUTPUT
    output $OUTPUT  background imgs/dark_1.jpg fill
    output $OUTPUT  mode 1920x1080@144Hz
    output $OUTPUT  scale 1
    output $OUTPUT  transform normal
    output $OUTPUT  scale_filter smart
    output $OUTPUT  max_render_time off
    output $OUTPUT  render_bit_depth 8
    output $OUTPUT  subpixel rgb
    output $OUTPUT  adaptive_sync on
    output $OUTPUT  allow_tearing yes
    output $OUTPUT  color_profile icc /usr/share/color/icc/colord/sRGB.icc

### Enable Xwayland ##
    xwayland enabled

### Input devices ###

    #* Hide cursor in 1 secs
    seat * {
        hide_cursor 1000
        hide_cursor when-typing enable
        pointer_constraint enable
    }

    #* Any Keyboard
    input type:keyboard {
        xkb_layout us,es,ru
        repeat_delay 160
        repeat_rate 60
    }

    #* Optical Mouse
    input 12538:768:USB_Optical_Mouse {
        natural_scroll disabled
        dwt enabled
        accel_profile adaptive
        scroll_factor 2
        pointer_accel 1
    }

    #* Any Trackpad
    input type:touchpad {
        accel_profile adaptive   # trackpad acceleration
        click_method clickfinger # Clickfinger
        middle_emulation enabled # Enable middle emulation
        drag_lock disabled       # Disable drag lock
        dwt enabled              # disable while typing
        natural_scroll enabled   # Inverted scroll
        tap enabled              # enable taps (should not be disabled)
        tap_button_map lrm       # lmr {(1 finger tap left click) (2 finger tap right click) (3 finger tap middle click)}
        scroll_method two_finger
        scroll_factor 2
        pointer_accel 1
        drag enabled
    }

### Set $mod (Mod4 or Super) for logo key ###
    set $mod Super

### Vim bindings everywhere ###
    set $left h
    set $down j
    set $up k
    set $right l

### My Application launcher ###
    set $menu_wofi wofi -W 40% -H 32% --gtk-dark --allow-images --config ${HOME}/.config/wofi/wofi.conf --allow-markup --hide-scroll --prompt="Search" --show drun
    set $menu_rofi rofi -show-icons -font Hack -theme material -show drun


### Auto Start ###
    exec --no-startup-id /usr/lib/polkit-kde-authentication-agent-1
    # Start's waybar
        exec --no-startup-id ${HOME}/.config/sway/theme.sh
    exec --no-startup-id autotiling
    exec --no-startup-id ${HOME}/.scripts/something
    exec --no-startup-id  bash -c \
        '$( (swaymsg exec flatpak run com.github.wwmm.easyeffects) ; sleep 5 ; swaymsg "[app_id="com.github.wwmm.easyeffects"] move scratchpad" )'

    exec_always --no-startup-id bash -c 'sock="${XDG_RUNTIME_DIR}/foot${WAYLAND_DISPLAY/#/-}.sock"; [[ -S "${sock}" ]] || foot --server=${sock}'
    exec_always --no-startup-id ${HOME}/.bin/NowPlaying
    exec_always --no-startup-id pkill -x swayidle; swayidle -w \
            timeout 100 "${HOME}/.config/sway/lock.sh" \
            resume "swaymsg 'output * power on'" \
            before-sleep "${HOME}/.config/sway/lock.sh set_bg"

### Window rules ###
    # Set opacity for all windows
        for_window [app_id=".*"] opacity 0.98
    # Border of newly spawned window
        for_window [class=".*"] border pixel 1
    # Border of floating window
        for_window [class=".*"] default_floating_border pixel 1
    # Transparancy levels for applications
        for_window [app_id="foot"] opacity 0.97
        for_window [app_id="waterfox|kitty"] opacity 1
    # Any App Id with 'Pop-Up', make it float it
        for_window [app_id="Pop-Up"] floating enable, move position center
    # Enabele floating don't tile
        for_window [app_id="^waterfox$|^com.rtosta.zapzap$|^org.pulseaudio.pavucontrol$|^pavucontrol$|^com.github.wwmm.easyeffects"] floating enable
        for_window [app_id="^org.kde.dolphin$|^org.kde.plasma-systemmonitor$|^blueman-manager$|^org.kde.konsole"] floating enable
        for_window [app_id="^org.kde.okular$|^org.qutebrowser.qutebrowser$|^org.kde.kclock$"] floating enable
        for_window [class="^Brave-browser$|^ZapZap$|^discord$"] floating enable

    # <outer-border-color> <frame-color> <title-text-color> <next-tiling-indicator-color>
        client.focused #333333 #6600AA #DDDDDD #6600AA
        client.unfocused #333333 #666666 #DDDDDD #666666

### Window Styling ###
    # Thickness of the titlebar border in pixels
        titlebar_border_thickness 0
    # Padding of the text in the titlebar
        titlebar_padding 0
    # Align titlebar text
        title_align center
    # Default border
        default_border none
    # Hide the titlebar on stacked or tabbed containers with one child
        hide_edge_borders --i3 none

### Keybindings for Containers/Workspaces/Layout/Behaviour/Volume/Brightnes/Focus ###

    #* Reload the configuration file
        bindsym $mod+Shift+c exec swaymsg reload

    #* Exit sway (Kicks you out of your Wayland session) *#
        bindsym $mod+Shift+E exec swaymsg exit

    #* Mouse for dragging *#
        floating_modifier $mod normal

    #* Switch to workspace *#
        bindsym {
            $mod+1 workspace number 1
            $mod+2 workspace number 2
            $mod+3 workspace number 3
            $mod+4 workspace number 4
            $mod+5 workspace number 5
            $mod+6 workspace number 6
        }

    #* Cycle next workspace *#
        # Focus the next window (one-directional)
        bindsym $mod+Tab exec bash -c 'swaymsg focus right || swaymsg focus down || swaymsg focus up || swaymsg focus left || swaymsg workspace next'
        # Focus the previous window (one-directional)
        bindsym $mod+Shift+Tab exec bash -c 'swaymsg focus left || swaymsg focus up || swaymsg focus down || swaymsg focus right || swaymsg workspace prev'


    #* Move focused container to workspace *#
        bindsym {
            $mod+Shift+1 move container to workspace number 1
            $mod+Shift+2 move container to workspace number 2
            $mod+Shift+3 move container to workspace number 3
            $mod+Shift+4 move container to workspace number 4
            $mod+Shift+5 move container to workspace number 5
            $mod+Shift+6 move container to workspace number 6
        }

    #* Special keys to adjust volume via PulseAudio *#
        bindsym {
            XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
            XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
            XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
            XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
        }

    #* Special keys to adjust brightness via brightnessctl *#
        bindsym {
            XF86MonBrightnessDown exec brightnessctl set 5%-
            XF86MonBrightnessUp exec brightnessctl set 5%+
        }

    #* Move your focus around, mode: VIM (hjkl) *#
        bindsym {
            $mod+$left focus left
            $mod+$down focus down
            $mod+$up focus up
            $mod+$right focus right
        }

    #* Move the focused window in floating mode, modes: VIM (hjkl) or arrow keys *#
        bindsym {
            $mod+Shift+$left move left
            $mod+Shift+Left move left
            $mod+Shift+$down move down
            $mod+Shift+Down move down
            $mod+Shift+$up move up
            $mod+Shift+Up move up
            $mod+Shift+$right move right
            $mod+Shift+Right move right
        }

    #* Resizing containers *#
        bindsym $mod+r mode resize
        mode resize {
            bindsym $up resize shrink height 14px
            bindsym $down resize grow height 14px
            bindsym $left resize shrink width 14px
            bindsym $right resize grow width 14px

            bindsym Return mode default
            bindsym Escape mode default
        }

        bindsym {
            $mod+Ctrl+$up resize shrink height 14px
            $mod+Ctrl+$down resize grow height 14px
            $mod+Ctrl+$left resize shrink width 14px
            $mod+Ctrl+$right resize grow width 14px
        }

    #* Layout stuff *#
        # Initial layout in a new an empty workspace
            workspace_layout default
        # Switch the current container between different layout styles
            bindsym $mod+S layout stacking
            bindsym $mod+T layout tabbed
        # decide the spawn side of the new window
        # bindsym $mod+B split horizontal
        # bindsym $mod+V split vertical

        # Toggle btween splith and splitv
            bindsym $mod+V split toggle
        # toggle split mode (Stacking, tabbed, and last split layout)
            bindsym $mod+B layout toggle split
        # Pop the stacking window from the container
            bindsym $mod+N split none
        # Fullscreen!
            bindsym $mod+F fullscreen
        # Jump the focus between tiling and floating mode
            bindsym $mod+Shift+Space floating toggle
        # Swap focus between the tiling area and the floating area
            bindsym $mod+Space focus mode_toggle
        # Move focus to the parent container
            bindsym $mod+A focus parent

        ## Scratchpad:
        # Sway has a "scratchpad", which is a bag of holding for windows.
        # Move the focused window into scratchpad because It's deamon
            bindsym $mod+Shift+minus move scratchpad
        # Cycle through the windows inside scratchpad.
            bindsym $mod+minus scratchpad show


### My Custom Key-bindings ###

    #* Executable Binaries *#
        # Keyboard centric browser
            bindsym $mod+F1 exec qutebrowser
        # Bring my Text-fu terminal
            bindsym $mod+Return exec footclient
            bindsym $mod+Shift+Return exec alacritty

        # Good File Managers
            bindsym Alt+E exec XDG_CURRENT_DESKTOP=kde GTK_THEME=Adwaita:dark QT_QPA_PLATFORMTHEME=qt6 dolphin
            bindsym $mod+E exec XDG_CURRENT_DESKTOP=kde nautilus
        # Lauch wofi, my friend who fetches all the applications for me
            bindsym Alt+Space exec $menu_wofi
            bindsym Alt+Shift+Space exec $menu_rofi

    #* Kill the focused windows *#
        bindsym $mod+q kill
        bindsym Alt+F4 kill

    #* Direct Shell Commands *#
        #$ Screen Recording $#
            # Start recording fullscreen! (Mod+Alt+V)
                bindsym $mod+Alt+V exec bash -c \
                    '$(DIR="${HOME}/WF_Recorder"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; pidof wf-recorder > /dev/null || wf-recorder --pixel-format=yuv420p --codec=h264_nvenc -p preset=fast --framerate=40 --audio="$(pactl get-default-sink).monitor" --file="${DIR}/Rec_$(date +%d-%b-%Y_%H:%M:%S).mkv")'
            # Start recording on selected ratio of the screen (Mod+Alt+B)
                bindsym $mod+Alt+B exec bash -c \
                    '$(DIR="${HOME}/WF_Recorder"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; pidof wf-recorder > /dev/null || wf-recorder --pixel-format=yuv420p --codec=h264_nvenc -p preset=fast --framerate=40 --audio="$(pactl get-default-sink).monitor" -g "$(slurp)" --file="${DIR}/Rec_$(date +%d-%b-%Y_%H:%M:%S).mkv")'
            # Stop recording send INT sig to the recorder (Mod+Alt+C)
                bindsym $mod+Alt+C exec bash -c \
                    '$(kill -INT $(pidof wf-recorder))'

        #$ Screenshot $#
            # Take screenshot of fullscreen! (Mod+PrtSc)
               bindsym $mod+Print exec bash -c \
                   '$(DIR="${HOME}/Grim_Screenshots"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; grim "${DIR}/$(date +%d-%b-%Y_%H:%M:%S).png")'
            # Screenshot of selected area (Mod+Shift+S)
                bindsym $mod+Shift+S exec bash -c \
                    '$(DIR="${HOME}/Grim_Screenshots"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; grim -g "$(slurp)" "${DIR}/$(date +%d-%b-%Y_%H:%M:%S).png")'

        # Edit this (sway config) with neovim or vim
            bindsym $mod+Shift+I exec bash -c \
                'CONF=${HOME}/.config/sway/config; command -v nvim && EDIT=nvim || EDIT=vim; foot ${EDIT} ${CONF}'

        # Shutdown (Mod+Alt+Shift+P)
            bindsym $mod+Alt+Shift+P exec bash -c \
                '$(notify-send "Shutting down... because I need a nap" ; sleep 2 ; swaymsg exit; systemctl poweroff --now)'
        # Reboot/Restart ($mod+Alt+Shift+R)
            bindsym $mod+Alt+Shift+R exec bash -c \
                '$(notify-send "REBOOTING... Sometimes you need to restart!" ; sleep 2 ; swaymsg exit; systemctl reboot --now)'
        # Sleep (Mod+Alt+Shift+delete)
            bindsym $mod+Alt+Shift+delete exec bash -c \
                '$(notify-send "I need some Rest"; sleep 2 ; swaymsg exit; systemctl suspend --now)'

        # Shutdown  ($mod+Alt+P)
            bindsym $mod+Alt+P exec bash -c \
                '$(swaymsg exit; systemctl poweroff --now)'
        # Reboot/Restart (Mod+Alt+R)
            bindsym $mod+Alt+R exec bash -c \
                '$(swaymsg exit; systemctl reboot --now)'
        # Sleep (Alt+Ctrl+delete)
            bindsym $mod+Alt+delete exec bash -c \
                '$(systemctl suspend --now)'

        # Hybrid sleep, like sleep but cooler (Mod+Alt+S)
            bindsym $mod+Alt+S exec bash -c \
                '$(systemctl hybrid-sleep --now)'

        # What's my selected screen resolution? (Mod+Shift+G)
            bindsym $mod+Shift+G exec bash -c \
                '$(Res="$(slurp)" && notify-send -t 10000 "${Res}")'

        # List of Emojies in rofi-emoji (backslash+E)
            bindsym $mod+grave+V exec bash -c \
                '$(rofi -modi emoji -show emoji)'

    #* System monitors *#
        # htop
        bindsym Ctrl+Shift+Escape exec bash -c \
            '$(  foot -e htop ||  foot -e btop )'
        # btop
        bindsym Ctrl+Escape exec bash -c \
            '$( foot -e btop || foot -e htop )'
        # Plasma system monitor
        bindsym $mod+Escape exec bash -c \
            '$( XDG_CURRENT_DESKTOP=KDE GTK_THEME=Adwaita:dark plasma-systemmonitor || ( foot -e htop || sudo pacman -Sy htop --noconfirm))'

    #* Toggle keyboard layout *#
        bindsym $mod+Alt+space input type:keyboard xkb_switch_layout next

    #* Scripts *#
        # An application launcher
            bindsym F10 exec pkill -x waybar && pkill -SIGUSR1 -f .config/sway/theme.sh

        # An application launcher
            bindsym $mod+D exec ${HOME}/.config/waybar/scripts/application_launcher

        # Create cava windows to look cool
            bindsym $mod+P exec "${HOME}/.bin/CavaInstances"
            bindsym $mod+O exec "${HOME}/.bin/CavaInstances CLEAN"

        # Execute whatever the hell that script does
            bindsym $mod+grave+G exec bash -c \
               '$(foot -e ${HOME}/.scripts/exec_me)'

        # Journal time: Let's document the mess
            bindsym $mod+grave+J exec bash -c \
                '$(foot -e ${HOME}/.bin/JournalToday nvim)'


### Additional configuration
include /etc/sway/config.d/*
# Documentation `man 5 sway`

