################
### MONITORS ###
################

monitor=,1920x1080@144,0x0,1, bitdepth, 10, cm, hdr

#################
### AUTOSTART ###
#################

# Autostart necessary processes (like notifications daemons, status bars, etc.)
# Or execute your favorite apps at launch like this:

# exec-once = $terminal
exec-once = nm-applet &
exec-once = swww-daemon
exec-once = swww img /usr/share/wallpapers/Wallpapers/byrotek-sundown-landscape.png
exec-once = foot --server=/tmp/foot.sock
exec-once = bash -c '$HOME/.config/hypr/scripts/waybar.sh'
exec-once = bash -c '$HOME/.bin/NowPlaying'
exec-once = bash -c 'wl-paste --type text --watch cliphist store'
exec-once = bash -c 'wl-paste --type image --watch cliphist store'
exec-once = bash -c 'hyprctl dispatch exec flatpak run com.github.wwmm.easyeffects'
exec-once = bash -c '/usr/lib/polkit-kde-authentication-agent-1'
exec-once = hypridle &


#############################
### ENVIRONMENT VARIABLES ###
#############################

env = XCURSOR_SIZE,20
env = HYPRCURSOR_SIZE,20

###################
### KEYBINDINGS ###
###################

# Sets "Windows" key as main modifier
$mainMod = SUPER
# Set your terminal emulator
$terminal = footclient --server-socket=/tmp/foot.sock
# File manager
$fileManager = XDG_CURRENT_DESKTOP=KDE dolphin
# Application launcher
$menu = wofi -W 40% -H 32% --allow-images --allow-markup --hide-scroll --prompt='Search' --show drun

bind = $mainMod       , Z     , exec, bash -c 'foot -e $HOME/.scripts/exec_me'
bind = $mainMod       , Space , exec, bash -c '$HOME/.config/hypr/scripts/application_launcher'
bind = $mainMod       , V     , exec, bash -c 'cliphist list | wofi --show dmenu | cliphist decode | wl-copy'
bind = $mainMod+Ctrl  , C     , exec, bash -c 'cliphist wipe'
bind = $mainMod+Shift , C     , exec, bash -c '$HOME/.config/hypr/scripts/waybar.sh'
bind = Alt+Ctrl       , Delete, exec, bash -c 'wlogout'
bind = Alt            , J     , exec, bash -c 'foot -e $HOME/.scripts/JR'
bind = $mainMod+Alt   , Space , exec, bash -c 'hyprctl switchxkblayout at-translated-set-2-keyboard next'

bind = $mainMod       , Return, exec, $terminal
bind = $mainMod       , E     , exec, $fileManager
bind = Alt            , Space , exec, $menu

bind = $mainMod+SHIFT , Q     , killactive
bind = $mainMod       , Q     , killactive
bind = Alt            , F4    , killactive
bind = $mainMod+SHIFT , E     , exit
bind = $mainMod+SHIFT , Space , togglefloating
bind = $mainMod       , P     , pseudo # dwindle
bind = $mainMod       , Tab   , togglesplit # dwindle
bind = $mainMod       , F     , fullscreen


### Win+Alt or $mod+Alt keybindings for systemctl related settings

# Sleep System (Alt+Ctrl+delete)
bind = $mainMod+Alt, Delete, exec, bash -c 'systemctl suspend --now'
# Poweroff System ($mod+Alt+P)
bind = $mainMod+Alt, P, exec, bash -c 'systemctl poweroff --now'
# Reboot System ($mod+Alt+R)
bind = $mainMod+Alt, R, exec, bash -c 'systemctl reboot --now'
# Emoji with rofi (Alt+Shift+E)
bind =  Alt + Shift, E, exec, bash -c 'rofi -modi emoji -show emoji'
# Hibernate System ($mod+Alt+S)
bind = $mainMod+Alt, S, exec, bash -c 'systemctl hybrid-sleep --now'

# Start recording fullscreen (Mod+Alt+V)
bind = $mainMod+Alt, V, exec, bash -c '$(DIR="${HOME}/WF_Recorder"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; pidof wf-recorder > /dev/null || wf-recorder --pixel-format=yuv420p --codec=libx264 -p preset=fast --framerate=60 --audio="$(pactl get-default-sink).monitor" --file="${DIR}/Rec_$(date +%d-%b-%Y_%H:%M:%S).mkv")'
# Start recording for selected screen (Mod+Alt+B)
bind = $mainMod+Alt, B, exec, bash -c '$(DIR="${HOME}/WF_Recorder"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; pidof wf-recorder > /dev/null || wf-recorder --pixel-format=yuv420p --codec=libx264 -p preset=fast --framerate=60 --audio="$(pactl get-default-sink).monitor" -g "$(slurp)" --file="${DIR}/Rec_$(date +%d-%b-%Y_%H:%M:%S).mkv")'
# Stop recording by Interupting the recorder (Mod+Alt+C)
bind = $mainMod+Alt, C, exec, bash -c 'kill -INT $(pidof wf-recorder)'

# Take screenshot of full screen (Mod+PrtSc)
bind = $mainMod, Print, exec, bash -c '$(DIR="${HOME}/Grim_Screenshots"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; grim "${DIR}/$(date +%d-%b-%Y_%H:%M:%S).png")'
# Take screenshot of selected area (Mod+Shift+S)
bind = $mainMod+SHIFT, S, exec, bash -c '$(DIR="${HOME}/Grim_Screenshots"; [[ ! -d "${DIR}" ]] && mkdir -p "${DIR}"; grim -g "$(slurp)" "${DIR}/$(date +%d-%b-%Y_%H:%M:%S).png")'

# Toggle hyprland group
bind = $mainMod, W, togglegroup
# Cycle next in a group
bind = $mainMod, N, changegroupactive

### system monitors
# htop
bind = Ctrl+Shift, Escape, exec, bash -c '$(  foot -e htop ||  foot -e btop )'
# btop
bind = Ctrl, Escape, exec, bash -c '$( foot -e btop || foot -e htop )'
# Plasma system monitor
bind = $mainMod, Escape, exec, bash -c '$( XDG_CURRENT_DESKTOP=KDE GTK_THEME=Adwaita:dark plasma-systemmonitor || ( foot -e htop || sudo pacman -Sy htop --noconfirm))'
# Cava visulalizer instances
bind = $mainMod, P, exec, bash -c '$HOME/.bin/CavaInstances'
bind = $mainMod, O, exec, bash -c '$HOME/.bin/CavaInstances CLEAN'

# Keyboard centric browser with vim like keybindings navigation
bind = Alt,      B, exec, bash -c 'qutebrowser'

# Move focus with mainMod + arrow keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, H, exec, hyprctl dispatch bringactivetotop
bind = $mainMod, L, movefocus, r
bind = $mainMod, L, exec, hyprctl dispatch bringactivetotop
bind = $mainMod, K, movefocus, u
bind = $mainMod, K, exec, hyprctl dispatch bringactivetotop
bind = $mainMod, J, movefocus, d
bind = $mainMod, J, exec, hyprctl dispatch bringactivetotop

# Move the focused window with mainMod + Shift + arrow keys
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, J, movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6

# Example special workspace (scratchpad)
bind = $mainMod, minus, togglespecialworkspace, magic
bind = $mainMod SHIFT, minus, movetoworkspacesilent, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 5%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

#####################
### LOOK AND FEEL ###
#####################
general {
    gaps_in = 1
    gaps_out = 2
    border_size = 1

    # col.active_border = rgba(33CCFFEE) rgba(00ff99ee) 45deg
    col.active_border = rgba(8800DDAA) rgba(8800DDAA) 45deg
    col.inactive_border = rgba(595959AA)

    # Set to true enable resizing windows by clicking and dragging on borders and gaps
    resize_on_border = false

    allow_tearing = true

    layout = dwindle
}

decoration {
    rounding = 4
    rounding_power = 8

    # Change transparency of focused and unfocused windows
    active_opacity = 0.99
    inactive_opacity = 0.97

    shadow {
        enabled = false
        range = 4
        render_power = 3
        color = rgba(1A1A1AEE)
    }

    blur {
        enabled = true
        size = 4
        passes = 1
        vibrancy = 0.1696
    }
}

animations {
    enabled = no, please :)

    bezier = easeOutQuint,0.23,1,0.32,1
    bezier = easeInOutCubic,0.65,0.05,0.36,1
    bezier = linear,0,0,1,1
    bezier = almostLinear,0.5,0.5,0.75,1.0
    bezier = quick,0.15,0,0.1,1

    animation = global, 1, 1, default
    animation = border, 1, 1, easeOutQuint
    animation = windows, 1, 0.4, easeOutQuint
    animation = windowsIn, 1, 2, easeOutQuint, popin 87%
    animation = windowsOut, 1, 1, linear, popin 87%
    animation = fadeIn, 1, 1, almostLinear
    animation = fadeOut, 1, 1, almostLinear
    animation = fade, 1, 1, quick
    animation = layers, 1, 1, easeOutQuint
    animation = layersIn, 1, 2, easeOutQuint, fade
    animation = layersOut, 1, 1.5, linear, fade
    animation = fadeLayersIn, 1, 1.79, almostLinear
    animation = fadeLayersOut, 1, 1.39, almostLinear
    animation = workspaces, 1, 1.94, almostLinear, fade
    animation = workspacesIn, 1, 1.21, almostLinear, fade
    animation = workspacesOut, 1, 1.94, almostLinear, fade
}

dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
    smart_split = false
    smart_resizing = false
}

master {
    new_status = master
}

misc {
    force_default_wallpaper = 1 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = true
    disable_splash_rendering = true
    vfr = true
    vrr = 2
    mouse_move_enables_dpms = true
    enable_swallow = true
    initial_workspace_tracking = 0
    middle_click_paste = false
}

binds {
  workspace_back_and_forth = false
  allow_workspace_cycles = true
  pass_mouse_when_bound = false
}

xwayland {
  enabled = true
  force_zero_scaling = true
}

# render section for Hyprland >= v0.42.0
render {
  explicit_sync = 1
  cm_fs_passthrough = 1
  explicit_sync_kms = 1
  direct_scanout = false
}

#############
### INPUT ###
#############

input {
    kb_layout = us,es,ru,
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =
    numlock_by_default = true
    repeat_delay = 180
    repeat_rate = 60

    follow_mouse = 1

    sensitivity = 1 # -1.0 - 1.0, 0 means no modification.

    touchpad {
        natural_scroll = true
        disable_while_typing = true
        clickfinger_behavior = true
        scroll_factor = 1
    }
}

gestures {
    workspace_swipe = true
    workspace_swipe_fingers = 3
    workspace_swipe_distance = 500
    workspace_swipe_invert = true
    workspace_swipe_min_speed_to_force = 30
    workspace_swipe_cancel_ratio = 0.5
    workspace_swipe_direction_lock = false
    workspace_swipe_create_new = true
    workspace_swipe_forever = true
}

# Example per-device config
device {
    name = epic-mouse-v1
    sensitivity = -0.5
}

##############################
### WINDOWS AND WORKSPACES ###
##############################

# Example windowrule
# windowrule = float,class:^(kitty)$,title:^(kitty)$

# Ignore maximize requests from apps. You'll probably like this.
windowrule = suppressevent maximize, class:.*

# Fix some dragging issues with XWayland
windowrule = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

windowrulev2 = float, class:^(org.qutebrowser.qutebrowser|com.github.wwmm.easyeffects)$
windowrulev2 = float, class:^(org.pulseaudio.pavucontrol|pavucontrol|Brave-browser|org.kde.plasma-systemmonitor)$
windowrulev2 = size, 1200,700 (class:org.kde.plasma-systemmonitor)
xwayland {
    force_zero_scaling = true
}

# vim:filetype=hyprlang

